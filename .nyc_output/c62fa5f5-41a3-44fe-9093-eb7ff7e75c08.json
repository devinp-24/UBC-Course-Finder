{"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/InsightFacade.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":73}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":43}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":49}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":47}},"9":{"start":{"line":13,"column":24},"end":{"line":13,"column":26}},"10":{"start":{"line":14,"column":27},"end":{"line":14,"column":29}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":49}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":49}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":58}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":55}},"15":{"start":{"line":25,"column":22},"end":{"line":25,"column":44}},"16":{"start":{"line":26,"column":19},"end":{"line":26,"column":26}},"17":{"start":{"line":29,"column":8},"end":{"line":73,"column":11}},"18":{"start":{"line":30,"column":12},"end":{"line":72,"column":13}},"19":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"20":{"start":{"line":32,"column":20},"end":{"line":32,"column":74}},"21":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"22":{"start":{"line":35,"column":20},"end":{"line":35,"column":81}},"23":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"24":{"start":{"line":38,"column":20},"end":{"line":38,"column":81}},"25":{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},"26":{"start":{"line":41,"column":20},"end":{"line":41,"column":91}},"27":{"start":{"line":43,"column":16},"end":{"line":68,"column":19}},"28":{"start":{"line":45,"column":20},"end":{"line":47,"column":21}},"29":{"start":{"line":46,"column":24},"end":{"line":46,"column":114}},"30":{"start":{"line":48,"column":42},"end":{"line":48,"column":63}},"31":{"start":{"line":49,"column":20},"end":{"line":51,"column":21}},"32":{"start":{"line":50,"column":24},"end":{"line":50,"column":105}},"33":{"start":{"line":52,"column":20},"end":{"line":54,"column":23}},"34":{"start":{"line":53,"column":24},"end":{"line":53,"column":54}},"35":{"start":{"line":55,"column":20},"end":{"line":65,"column":23}},"36":{"start":{"line":56,"column":24},"end":{"line":56,"column":78}},"37":{"start":{"line":57,"column":24},"end":{"line":59,"column":25}},"38":{"start":{"line":58,"column":28},"end":{"line":58,"column":105}},"39":{"start":{"line":60,"column":24},"end":{"line":60,"column":56}},"40":{"start":{"line":61,"column":24},"end":{"line":61,"column":64}},"41":{"start":{"line":62,"column":24},"end":{"line":62,"column":56}},"42":{"start":{"line":64,"column":24},"end":{"line":64,"column":40}},"43":{"start":{"line":67,"column":20},"end":{"line":67,"column":87}},"44":{"start":{"line":71,"column":16},"end":{"line":71,"column":30}},"45":{"start":{"line":76,"column":8},"end":{"line":92,"column":11}},"46":{"start":{"line":77,"column":12},"end":{"line":91,"column":13}},"47":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"48":{"start":{"line":79,"column":20},"end":{"line":79,"column":74}},"49":{"start":{"line":81,"column":30},"end":{"line":81,"column":64}},"50":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"51":{"start":{"line":83,"column":20},"end":{"line":83,"column":82}},"52":{"start":{"line":85,"column":16},"end":{"line":85,"column":56}},"53":{"start":{"line":86,"column":16},"end":{"line":86,"column":59}},"54":{"start":{"line":87,"column":16},"end":{"line":87,"column":28}},"55":{"start":{"line":90,"column":16},"end":{"line":90,"column":30}},"56":{"start":{"line":95,"column":28},"end":{"line":95,"column":32}},"57":{"start":{"line":96,"column":8},"end":{"line":114,"column":9}},"58":{"start":{"line":97,"column":32},"end":{"line":97,"column":66}},"59":{"start":{"line":98,"column":35},"end":{"line":98,"column":81}},"60":{"start":{"line":99,"column":30},"end":{"line":99,"column":78}},"61":{"start":{"line":100,"column":28},"end":{"line":100,"column":96}},"62":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"63":{"start":{"line":102,"column":16},"end":{"line":102,"column":77}},"64":{"start":{"line":104,"column":36},"end":{"line":104,"column":95}},"65":{"start":{"line":105,"column":33},"end":{"line":105,"column":103}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":45}},"67":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"68":{"start":{"line":108,"column":16},"end":{"line":108,"column":110}},"69":{"start":{"line":110,"column":12},"end":{"line":110,"column":32}},"70":{"start":{"line":113,"column":12},"end":{"line":113,"column":57}},"71":{"start":{"line":117,"column":8},"end":{"line":128,"column":11}},"72":{"start":{"line":118,"column":12},"end":{"line":127,"column":13}},"73":{"start":{"line":119,"column":36},"end":{"line":119,"column":38}},"74":{"start":{"line":120,"column":16},"end":{"line":122,"column":17}},"75":{"start":{"line":121,"column":20},"end":{"line":121,"column":64}},"76":{"start":{"line":123,"column":16},"end":{"line":123,"column":37}},"77":{"start":{"line":126,"column":16},"end":{"line":126,"column":85}},"78":{"start":{"line":131,"column":0},"end":{"line":131,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":23,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":40},"end":{"line":74,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":27},"end":{"line":29,"column":28}},"loc":{"start":{"line":29,"column":48},"end":{"line":73,"column":9}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":44,"column":26},"end":{"line":44,"column":27}},"loc":{"start":{"line":44,"column":35},"end":{"line":66,"column":17}},"line":44},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":42},"end":{"line":52,"column":43}},"loc":{"start":{"line":52,"column":72},"end":{"line":54,"column":21}},"line":52},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":43},"end":{"line":55,"column":44}},"loc":{"start":{"line":55,"column":56},"end":{"line":63,"column":21}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":63,"column":29},"end":{"line":63,"column":30}},"loc":{"start":{"line":63,"column":38},"end":{"line":65,"column":21}},"line":63},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":25},"end":{"line":66,"column":26}},"loc":{"start":{"line":66,"column":34},"end":{"line":68,"column":17}},"line":66},"9":{"name":"(anonymous_9)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":28},"end":{"line":93,"column":5}},"line":75},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":27},"end":{"line":76,"column":28}},"loc":{"start":{"line":76,"column":48},"end":{"line":92,"column":9}},"line":76},"11":{"name":"(anonymous_11)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":30},"end":{"line":115,"column":5}},"line":94},"12":{"name":"(anonymous_12)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":25},"end":{"line":129,"column":5}},"line":116},"13":{"name":"(anonymous_13)","decl":{"start":{"line":117,"column":27},"end":{"line":117,"column":28}},"loc":{"start":{"line":117,"column":48},"end":{"line":128,"column":9}},"line":117}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},{"start":{"line":31,"column":16},"end":{"line":33,"column":17}}],"line":31},"4":{"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":63}},"type":"binary-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":23}},{"start":{"line":31,"column":27},"end":{"line":31,"column":43}},{"start":{"line":31,"column":47},"end":{"line":31,"column":63}}],"line":31},"5":{"loc":{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":34,"column":16},"end":{"line":36,"column":17}},{"start":{"line":34,"column":16},"end":{"line":36,"column":17}}],"line":34},"6":{"loc":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},{"start":{"line":37,"column":16},"end":{"line":39,"column":17}}],"line":37},"7":{"loc":{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":42,"column":17}},{"start":{"line":40,"column":16},"end":{"line":42,"column":17}}],"line":40},"8":{"loc":{"start":{"line":45,"column":20},"end":{"line":47,"column":21}},"type":"if","locations":[{"start":{"line":45,"column":20},"end":{"line":47,"column":21}},{"start":{"line":45,"column":20},"end":{"line":47,"column":21}}],"line":45},"9":{"loc":{"start":{"line":49,"column":20},"end":{"line":51,"column":21}},"type":"if","locations":[{"start":{"line":49,"column":20},"end":{"line":51,"column":21}},{"start":{"line":49,"column":20},"end":{"line":51,"column":21}}],"line":49},"10":{"loc":{"start":{"line":57,"column":24},"end":{"line":59,"column":25}},"type":"if","locations":[{"start":{"line":57,"column":24},"end":{"line":59,"column":25}},{"start":{"line":57,"column":24},"end":{"line":59,"column":25}}],"line":57},"11":{"loc":{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},"type":"if","locations":[{"start":{"line":78,"column":16},"end":{"line":80,"column":17}},{"start":{"line":78,"column":16},"end":{"line":80,"column":17}}],"line":78},"12":{"loc":{"start":{"line":78,"column":20},"end":{"line":78,"column":63}},"type":"binary-expr","locations":[{"start":{"line":78,"column":20},"end":{"line":78,"column":23}},{"start":{"line":78,"column":27},"end":{"line":78,"column":43}},{"start":{"line":78,"column":47},"end":{"line":78,"column":63}}],"line":78},"13":{"loc":{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":84,"column":17}},{"start":{"line":82,"column":16},"end":{"line":84,"column":17}}],"line":82},"14":{"loc":{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":103,"column":13}},{"start":{"line":101,"column":12},"end":{"line":103,"column":13}}],"line":101},"15":{"loc":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},{"start":{"line":107,"column":12},"end":{"line":109,"column":13}}],"line":107}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":13,"10":13,"11":13,"12":13,"13":13,"14":13,"15":8,"16":8,"17":8,"18":8,"19":8,"20":1,"21":7,"22":0,"23":7,"24":0,"25":7,"26":0,"27":7,"28":7,"29":0,"30":7,"31":7,"32":0,"33":7,"34":41608,"35":7,"36":7,"37":7,"38":0,"39":7,"40":7,"41":7,"42":0,"43":0,"44":1,"45":8,"46":8,"47":8,"48":5,"49":3,"50":3,"51":1,"52":2,"53":2,"54":2,"55":6,"56":7,"57":7,"58":7,"59":6,"60":6,"61":6,"62":6,"63":0,"64":6,"65":6,"66":6,"67":6,"68":0,"69":6,"70":1,"71":4,"72":4,"73":4,"74":4,"75":4,"76":4,"77":0,"78":1},"f":{"0":2,"1":13,"2":8,"3":8,"4":7,"5":41608,"6":7,"7":0,"8":0,"9":8,"10":8,"11":7,"12":4,"13":4},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[1,7],"4":[8,7,7],"5":[0,7],"6":[0,7],"7":[0,7],"8":[0,7],"9":[0,7],"10":[0,7],"11":[5,3],"12":[8,6,5],"13":[1,2],"14":[0,6],"15":[0,6]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/InsightFacade.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError, ResultTooLargeError\n} from \"./IInsightFacade\";\nimport {getContentFromArchives} from \"../../test/TestUtil\";\nimport Section from \"../dataModels/Section\";\nimport JSZip from \"jszip\";\nimport CourseData from \"../dataModels/CourseData\";\nimport {Parser} from \"../query/Parser\";\nimport {Validator} from \"../query/Validator\";\nimport {Executor} from \"../query/Executor\";\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tprivate datasetCollection: string[] = [];\n\tprivate courseDataCollection: CourseData[] = [];\n\tprivate queryParser: Parser;\n\tprivate queryValidator: Validator;\n\tprivate queryExecutor: Executor;\n\tconstructor() {\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\tthis.queryParser = new Parser();\n\t\tthis.queryValidator = new Validator();\n\t\tthis.queryExecutor = new Executor();\n\t}\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\tlet zipFile = JSZip();\n\t\tlet info = Array<Promise<string>>();\n\t\tlet functionPromise: Promise<string[]>;\n\t\tlet dataset: CourseData;\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tif (!id || id.includes(\"_\") || id.trim() === \"\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid ID\");\n\t\t\t\t}\n\t\t\t\tif (this.datasetCollection.includes(id)) {\n\t\t\t\t\tthrow new InsightError(\"ID already exists\");\n\t\t\t\t}\n\t\t\t\tif (kind !== InsightDatasetKind.Sections) {\n\t\t\t\t\tthrow new InsightError(\"Invalid Kind Type\");\n\t\t\t\t}\n\t\t\t\tif (content === null) {\n\t\t\t\t\tthrow new InsightError(\"Content should not be empty\");\n\t\t\t\t}\n\t\t\t\tzipFile.loadAsync(content, {base64: true})\n\t\t\t\t\t.then((zip: JSZip) => {\n\t\t\t\t\t\tif (Object.keys(zip.files)[0] !== \"courses/\") {\n\t\t\t\t\t\t\treturn reject(new InsightError(\"Folder does not exist in the zip file\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst coursesFolder = zip.folder(\"courses\");\n\t\t\t\t\t\tif (!coursesFolder) {\n\t\t\t\t\t\t\tthrow new InsightError(\"Folder does not exist in the zip file\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcoursesFolder.forEach(function (relativePath, file) {\n\t\t\t\t\t\t\tinfo.push(file.async(\"text\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t\tPromise.all(info).then((promise: string[]) => {\n\t\t\t\t\t\t\tdataset = new CourseData(id, kind, promise);\n\t\t\t\t\t\t\tif (dataset.sections.length === 0) {\n\t\t\t\t\t\t\t\treturn reject(new InsightError(\"No valid sections to add\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.datasetCollection.push(id);\n\t\t\t\t\t\t\tthis.courseDataCollection.push(dataset);\n\t\t\t\t\t\t\tresolve(this.datasetCollection);\n\t\t\t\t\t\t}).catch((err: any) => {\n\t\t\t\t\t\t\treject(\"Error\");\n\t\t\t\t\t\t});\n\t\t\t\t\t}).catch((err: any) => {\n\t\t\t\t\t\treject(new InsightError(\"Failed to add dataset\"));\n\t\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tif (!id || id.includes(\"_\") || id.trim() === \"\") {\n\t\t\t\t\tthrow new InsightError(\"Invalid ID\");\n\t\t\t\t}\n\n\t\t\t\tconst index = this.datasetCollection.indexOf(id);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\tthrow new NotFoundError(\"Dataset not found\");\n\t\t\t\t}\n\n\t\t\t\tthis.datasetCollection.splice(index, 1);\n\t\t\t\tthis.courseDataCollection.splice(index, 1);\n\n\t\t\t\tresolve(id);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\tconst MAX_RESULTS = 5000;\n\t\ttry {\n\t\t\t// Use QueryParser to parse the query\n\t\t\tconst parsedQuery = this.queryParser.parseQuery(query);\n\t\t\tconst validatedQuery = this.queryValidator.validateQuery(parsedQuery);\n\n\t\t\t// Step 2: Retrieve the dataset referenced in the query\n\t\t\tconst datasetId = this.queryExecutor.extractDatasetId(parsedQuery);\n\t\t\tconst dataset = this.courseDataCollection[this.datasetCollection.indexOf(datasetId)];\n\t\t\tif (!dataset) {\n\t\t\t\tthrow new InsightError(\"Dataset not found\");\n\t\t\t}\n\n\t\t\t// Step 3: Apply filters defined in the WHERE clause\n\t\t\tconst filteredResults = this.queryExecutor.applyFilters(dataset, parsedQuery.WHERE);\n\n\t\t\t// Step 4: Apply sorting and column selection based on OPTIONS\n\t\t\tconst finalResults = this.queryExecutor.formatResults(filteredResults, parsedQuery.OPTIONS);\n\t\t\tconsole.log(finalResults.length);\n\t\t\t// Step 5: Check for result size constraints\n\t\t\tif (finalResults.length > MAX_RESULTS) {\n\t\t\t\tthrow new ResultTooLargeError(\"The query results exceed the allowed limit.\");\n\t\t\t}\n\n\t\t\treturn finalResults;\n\t\t} catch (error) {\n\t\t\t// Handle parsing, validation, and execution errors\n\t\t\tthrow new InsightError(\"l\");\n\t\t}\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\treturn new Promise<InsightDataset[]>((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst datasetList: InsightDataset[] = [];\n\t\t\t\tfor (const courseData of this.courseDataCollection) {\n\t\t\t\t\tdatasetList.push(courseData.insightDataset);\n\t\t\t\t}\n\t\t\t\tresolve(datasetList);\n\t\t\t} catch (error) {\n\t\t\t\treject(new InsightError(\"Failed to list datasets\"));\n\t\t\t}\n\t\t});\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d573afe2d2d46970722716eccffb9093b5387695","contentHash":"19744dda28294f02b26b30c83bd07edb0cb4887d95d3d53f515f67c6865202e3"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/IInsightFacade.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":7,"6":7,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":7,"2":1,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/IInsightFacade.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAYD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t * working on it right now\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5ea058a8951534e381ea7eb3e5ebf4eda8116d38","contentHash":"e35980544c8480659682d9c04ecef077fc0f7cca7ed3f078a300474252cfe626"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/CourseData.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/CourseData.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":55}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":21}},"5":{"start":{"line":14,"column":8},"end":{"line":14,"column":53}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"7":{"start":{"line":16,"column":8},"end":{"line":16,"column":98}},"8":{"start":{"line":17,"column":8},"end":{"line":20,"column":9}},"9":{"start":{"line":18,"column":31},"end":{"line":18,"column":49}},"10":{"start":{"line":19,"column":12},"end":{"line":19,"column":37}},"11":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":51}},"13":{"start":{"line":26,"column":8},"end":{"line":42,"column":9}},"14":{"start":{"line":27,"column":23},"end":{"line":27,"column":32}},"15":{"start":{"line":28,"column":27},"end":{"line":28,"column":40}},"16":{"start":{"line":29,"column":24},"end":{"line":29,"column":36}},"17":{"start":{"line":30,"column":29},"end":{"line":30,"column":45}},"18":{"start":{"line":31,"column":23},"end":{"line":31,"column":37}},"19":{"start":{"line":32,"column":23},"end":{"line":32,"column":34}},"20":{"start":{"line":33,"column":22},"end":{"line":33,"column":32}},"21":{"start":{"line":34,"column":23},"end":{"line":34,"column":34}},"22":{"start":{"line":35,"column":23},"end":{"line":35,"column":34}},"23":{"start":{"line":36,"column":24},"end":{"line":36,"column":36}},"24":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"25":{"start":{"line":38,"column":16},"end":{"line":38,"column":28}},"26":{"start":{"line":40,"column":26},"end":{"line":40,"column":118}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":40}},"28":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"29":{"start":{"line":46,"column":0},"end":{"line":46,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":53},"end":{"line":21,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":19},"end":{"line":44,"column":5}},"line":22}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"4":{"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":73}},"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":20}},{"start":{"line":23,"column":24},"end":{"line":23,"column":39}},{"start":{"line":23,"column":43},"end":{"line":23,"column":73}}],"line":23},"5":{"loc":{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":39,"column":13}},{"start":{"line":37,"column":12},"end":{"line":39,"column":13}}],"line":37}},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":7,"6":7,"7":7,"8":7,"9":41608,"10":41608,"11":41608,"12":0,"13":41608,"14":452284,"15":452284,"16":452284,"17":452284,"18":452284,"19":452284,"20":452284,"21":452284,"22":452284,"23":452284,"24":452284,"25":172347,"26":452284,"27":452284,"28":41608,"29":1},"f":{"0":1,"1":7,"2":41608},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,41608],"4":[41608,41608,41608],"5":[172347,279937]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/CourseData.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/CourseData.ts"],"names":[],"mappings":";;;;;AACA,wDAAgC;AAEhC,MAAqB,UAAU;IACvB,EAAE,CAAS;IACX,kBAAkB,CAAqB;IACvC,cAAc,CAAiB;IAC/B,QAAQ,CAAY;IAE3B,YAAY,EAAU,EAAE,kBAAsC,EAAE,WAAqB;QACpF,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,EAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC;QAExF,KAAK,IAAI,MAAM,IAAI,WAAW,EAAE;YAC/B,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SACzB;IACF,CAAC;IAEM,KAAK,CAAC,OAAY;QACxB,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAClE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SACvC;QAED,KAAK,IAAI,MAAM,IAAI,OAAO,CAAC,MAAM,EAAE;YAClC,IAAI,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC;YACrB,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;YAC7B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACzB,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC;YAC1B,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACvB,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACrB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACvB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACvB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACzB,IAAI,MAAM,CAAC,OAAO,KAAK,SAAS,EAAE;gBACjC,IAAI,GAAG,IAAI,CAAC;aACZ;YACD,IAAI,OAAO,GAAG,IAAI,iBAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACjG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC5B;QAED,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACpD,CAAC;CACD;AA3CD,6BA2CC","sourcesContent":["import {InsightDataset, InsightDatasetKind} from \"../controller/IInsightFacade\";\nimport Section from \"./Section\";\n\nexport default class CourseData {\n\tpublic id: string;\n\tpublic insightDatasetKind: InsightDatasetKind;\n\tpublic insightDataset: InsightDataset;\n\tpublic sections: Section[];\n\n\tconstructor(id: string, insightDatasetKind: InsightDatasetKind, coursesList: string[]) {\n\t\tthis.id = id;\n\t\tthis.insightDatasetKind = insightDatasetKind;\n\t\tthis.sections = [];\n\t\tthis.insightDataset = {id: id, kind: insightDatasetKind, numRows: this.sections.length};\n\n\t\tfor (let course of coursesList) {\n\t\t\tlet parsedCourse = JSON.parse(course);\n\t\t\tthis.parse(parsedCourse);\n\t\t}\n\t}\n\n\tpublic parse(courses: any) {\n\t\tif (!courses || !courses.result || !Array.isArray(courses.result)) {\n\t\t\tthrow new Error(\"Invalid JSON format\");\n\t\t}\n\n\t\tfor (let course of courses.result) {\n\t\t\tlet uuid = course.id;\n\t\t\tlet courseID = course.Course;\n\t\t\tlet title = course.Title;\n\t\t\tlet instructor = course.Professor; // Corrected property name\n\t\t\tlet dept = course.Subject;\n\t\t\tlet year = course.Year;\n\t\t\tlet avg = course.Avg;\n\t\t\tlet pass = course.Pass;\n\t\t\tlet fail = course.Fail;\n\t\t\tlet audit = course.Audit;\n\t\t\tif (course.Section === \"overall\") { // Corrected property name\n\t\t\t\tyear = 1900;\n\t\t\t}\n\t\t\tlet section = new Section(uuid, courseID, title, instructor, dept, year, avg, pass, fail, audit);\n\t\t\tthis.sections.push(section);\n\t\t}\n\n\t\tthis.insightDataset.numRows = this.sections.length;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6b0003e9be1e7485c001a244b8514359c5b3692e","contentHash":"8e84a631a75940758657f5c6a88915c676b7630714e87d8f90742d59c46559f7"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/Section.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/Section.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":27}},"4":{"start":{"line":18,"column":8},"end":{"line":18,"column":37}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":25}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"11":{"start":{"line":27,"column":8},"end":{"line":56,"column":9}},"12":{"start":{"line":28,"column":12},"end":{"line":28,"column":29}},"13":{"start":{"line":30,"column":13},"end":{"line":56,"column":9}},"14":{"start":{"line":31,"column":12},"end":{"line":31,"column":34}},"15":{"start":{"line":33,"column":13},"end":{"line":56,"column":9}},"16":{"start":{"line":34,"column":12},"end":{"line":34,"column":30}},"17":{"start":{"line":36,"column":13},"end":{"line":56,"column":9}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":35}},"19":{"start":{"line":39,"column":13},"end":{"line":56,"column":9}},"20":{"start":{"line":40,"column":12},"end":{"line":40,"column":29}},"21":{"start":{"line":42,"column":13},"end":{"line":56,"column":9}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":29}},"23":{"start":{"line":45,"column":13},"end":{"line":56,"column":9}},"24":{"start":{"line":46,"column":12},"end":{"line":46,"column":28}},"25":{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},"26":{"start":{"line":49,"column":12},"end":{"line":49,"column":29}},"27":{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},"28":{"start":{"line":52,"column":12},"end":{"line":52,"column":29}},"29":{"start":{"line":54,"column":13},"end":{"line":56,"column":9}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":30}},"31":{"start":{"line":59,"column":0},"end":{"line":59,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":88},"end":{"line":25,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":15},"end":{"line":57,"column":5}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":56,"column":9}},{"start":{"line":27,"column":8},"end":{"line":56,"column":9}}],"line":27},"1":{"loc":{"start":{"line":30,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":13},"end":{"line":56,"column":9}},{"start":{"line":30,"column":13},"end":{"line":56,"column":9}}],"line":30},"2":{"loc":{"start":{"line":33,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":13},"end":{"line":56,"column":9}},{"start":{"line":33,"column":13},"end":{"line":56,"column":9}}],"line":33},"3":{"loc":{"start":{"line":36,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":13},"end":{"line":56,"column":9}},{"start":{"line":36,"column":13},"end":{"line":56,"column":9}}],"line":36},"4":{"loc":{"start":{"line":39,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":56,"column":9}},{"start":{"line":39,"column":13},"end":{"line":56,"column":9}}],"line":39},"5":{"loc":{"start":{"line":42,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":56,"column":9}},{"start":{"line":42,"column":13},"end":{"line":56,"column":9}}],"line":42},"6":{"loc":{"start":{"line":45,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":13},"end":{"line":56,"column":9}},{"start":{"line":45,"column":13},"end":{"line":56,"column":9}}],"line":45},"7":{"loc":{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":13},"end":{"line":56,"column":9}},{"start":{"line":48,"column":13},"end":{"line":56,"column":9}}],"line":48},"8":{"loc":{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":56,"column":9}},{"start":{"line":51,"column":13},"end":{"line":56,"column":9}}],"line":51},"9":{"loc":{"start":{"line":54,"column":13},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":13},"end":{"line":56,"column":9}},{"start":{"line":54,"column":13},"end":{"line":56,"column":9}}],"line":54}},"s":{"0":1,"1":452284,"2":452284,"3":452284,"4":452284,"5":452284,"6":452284,"7":452284,"8":452284,"9":452284,"10":452284,"11":456212,"12":0,"13":456212,"14":56,"15":456156,"16":0,"17":456156,"18":0,"19":456156,"20":68119,"21":388037,"22":0,"23":388037,"24":388037,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"f":{"0":452284,"1":456212},"b":{"0":[0,456212],"1":[56,456156],"2":[0,456156],"3":[0,456156],"4":[68119,388037],"5":[0,388037],"6":[388037,0],"7":[0,0],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/Section.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/dataModels/Section.ts"],"names":[],"mappings":";;AAAA,MAAqB,OAAO;IAEV,IAAI,CAAS;IACb,SAAS,CAAS;IAClB,KAAK,CAAS;IACd,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,IAAI,CAAS;IACb,GAAG,CAAS;IACZ,IAAI,CAAS;IACb,IAAI,CAAS;IACb,KAAK,CAAS;IAE/B,YAAY,IAAY,EAAE,SAAiB,EAAE,KAAa,EAAE,UAAkB,EAAE,IAAY,EAC3F,IAAY,EAAE,GAAW,EAAE,IAAY,EAAE,IAAY,EAAE,KAAa;QACpE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,GAAG,CAAC,KAAa;QACvB,IAAI,KAAK,KAAK,MAAM,EAAE;YACrB,OAAO,IAAI,CAAC,IAAI,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,IAAI,EAAE;YAC1B,OAAO,IAAI,CAAC,SAAS,CAAC;SACtB;aAAM,IAAI,KAAK,KAAK,OAAO,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC;SAClB;aAAM,IAAI,KAAK,KAAK,YAAY,EAAE;YAClC,OAAO,IAAI,CAAC,UAAU,CAAC;SACvB;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,IAAI,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,IAAI,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,KAAK,EAAE;YAC3B,OAAO,IAAI,CAAC,GAAG,CAAC;SAChB;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,IAAI,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,MAAM,EAAE;YAC5B,OAAO,IAAI,CAAC,IAAI,CAAC;SACjB;aAAM,IAAI,KAAK,KAAK,OAAO,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC;SAClB;IACF,CAAC;CACD;AAlDD,0BAkDC","sourcesContent":["export default class Section {\n\n\tprivate readonly uuid: string;\n\tprivate readonly course_id: string;\n\tprivate readonly title: string;\n\tprivate readonly instructor: string;\n\tprivate readonly dept: string;\n\tprivate readonly year: number;\n\tprivate readonly avg: number;\n\tprivate readonly pass: number;\n\tprivate readonly fail: number;\n\tprivate readonly audit: number;\n\n\tconstructor(uuid: string, course_id: string, title: string, instructor: string, dept: string,\n\t\tyear: number, avg: number, pass: number, fail: number, audit: number) {\n\t\tthis.uuid = uuid;\n\t\tthis.course_id = course_id;\n\t\tthis.title = title;\n\t\tthis.instructor = instructor;\n\t\tthis.dept = dept;\n\t\tthis.year = year;\n\t\tthis.avg = avg;\n\t\tthis.pass = pass;\n\t\tthis.fail = fail;\n\t\tthis.audit = audit;\n\t}\n\n\tpublic get(keyID: string) {\n\t\tif (keyID === \"uuid\") {\n\t\t\treturn this.uuid;\n\t\t} else if (keyID === \"id\") {\n\t\t\treturn this.course_id;\n\t\t} else if (keyID === \"title\") {\n\t\t\treturn this.title;\n\t\t} else if (keyID === \"instructor\") {\n\t\t\treturn this.instructor;\n\t\t} else if (keyID === \"dept\") {\n\t\t\treturn this.dept;\n\t\t} else if (keyID === \"year\") {\n\t\t\treturn this.year;\n\t\t} else if (keyID === \"avg\") {\n\t\t\treturn this.avg;\n\t\t} else if (keyID === \"pass\") {\n\t\t\treturn this.pass;\n\t\t} else if (keyID === \"fail\") {\n\t\t\treturn this.fail;\n\t\t} else if (keyID === \"audit\") {\n\t\t\treturn this.audit;\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"122788b87e531b19f1e15db637bfbdc8201a536a","contentHash":"ca3ab526c69755a6bd771e4e99d09b13f3a0ca5363161b154ce055432273dc42"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Parser.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Parser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":79}},"5":{"start":{"line":10,"column":28},"end":{"line":10,"column":65}},"6":{"start":{"line":11,"column":30},"end":{"line":11,"column":71}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":62}},"8":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":62}},"10":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":22}},"12":{"start":{"line":21,"column":27},"end":{"line":21,"column":48}},"13":{"start":{"line":22,"column":28},"end":{"line":22,"column":45}},"14":{"start":{"line":23,"column":8},"end":{"line":37,"column":9}},"15":{"start":{"line":26,"column":16},"end":{"line":26,"column":76}},"16":{"start":{"line":30,"column":16},"end":{"line":30,"column":70}},"17":{"start":{"line":32,"column":16},"end":{"line":32,"column":58}},"18":{"start":{"line":34,"column":16},"end":{"line":34,"column":67}},"19":{"start":{"line":36,"column":16},"end":{"line":36,"column":70}},"20":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"21":{"start":{"line":41,"column":12},"end":{"line":41,"column":66}},"22":{"start":{"line":43,"column":8},"end":{"line":45,"column":10}},"23":{"start":{"line":44,"column":48},"end":{"line":44,"column":77}},"24":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"25":{"start":{"line":49,"column":12},"end":{"line":49,"column":99}},"26":{"start":{"line":51,"column":31},"end":{"line":51,"column":60}},"27":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"28":{"start":{"line":53,"column":12},"end":{"line":53,"column":93}},"29":{"start":{"line":55,"column":8},"end":{"line":55,"column":50}},"30":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"31":{"start":{"line":59,"column":12},"end":{"line":59,"column":89}},"32":{"start":{"line":61,"column":31},"end":{"line":61,"column":60}},"33":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"34":{"start":{"line":63,"column":12},"end":{"line":63,"column":84}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":42}},"36":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"37":{"start":{"line":69,"column":12},"end":{"line":69,"column":57}},"38":{"start":{"line":71,"column":27},"end":{"line":71,"column":34}},"39":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"40":{"start":{"line":73,"column":12},"end":{"line":73,"column":65}},"41":{"start":{"line":75,"column":24},"end":{"line":75,"column":42}},"42":{"start":{"line":76,"column":8},"end":{"line":80,"column":11}},"43":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"44":{"start":{"line":78,"column":16},"end":{"line":78,"column":73}},"45":{"start":{"line":81,"column":30},"end":{"line":83,"column":9}},"46":{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},"47":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"48":{"start":{"line":86,"column":16},"end":{"line":86,"column":58}},"49":{"start":{"line":88,"column":12},"end":{"line":88,"column":51}},"50":{"start":{"line":90,"column":8},"end":{"line":90,"column":29}},"51":{"start":{"line":93,"column":0},"end":{"line":93,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":22},"end":{"line":13,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":28},"end":{"line":38,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":46},"end":{"line":46,"column":5}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":36},"end":{"line":44,"column":37}},"loc":{"start":{"line":44,"column":48},"end":{"line":44,"column":77}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":43},"end":{"line":56,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":33},"end":{"line":66,"column":5}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":32},"end":{"line":91,"column":5}},"line":67},"7":{"name":"(anonymous_7)","decl":{"start":{"line":76,"column":24},"end":{"line":76,"column":25}},"loc":{"start":{"line":76,"column":36},"end":{"line":80,"column":9}},"line":76}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7},"1":{"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":55}},"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":37}},{"start":{"line":7,"column":41},"end":{"line":7,"column":55}}],"line":7},"2":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"3":{"loc":{"start":{"line":15,"column":12},"end":{"line":15,"column":55}},"type":"binary-expr","locations":[{"start":{"line":15,"column":12},"end":{"line":15,"column":37}},{"start":{"line":15,"column":41},"end":{"line":15,"column":55}}],"line":15},"4":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"5":{"loc":{"start":{"line":23,"column":8},"end":{"line":37,"column":9}},"type":"switch","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":23}},{"start":{"line":25,"column":12},"end":{"line":26,"column":76}},{"start":{"line":27,"column":12},"end":{"line":27,"column":22}},{"start":{"line":28,"column":12},"end":{"line":28,"column":22}},{"start":{"line":29,"column":12},"end":{"line":30,"column":70}},{"start":{"line":31,"column":12},"end":{"line":32,"column":58}},{"start":{"line":33,"column":12},"end":{"line":34,"column":67}},{"start":{"line":35,"column":12},"end":{"line":36,"column":70}}],"line":23},"6":{"loc":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},{"start":{"line":40,"column":8},"end":{"line":42,"column":9}}],"line":40},"7":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"8":{"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":105}},"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":42}},{"start":{"line":48,"column":46},"end":{"line":48,"column":65}},{"start":{"line":48,"column":69},"end":{"line":48,"column":105}}],"line":48},"9":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{"line":52,"column":8},"end":{"line":54,"column":9}}],"line":52},"10":{"loc":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},{"start":{"line":58,"column":8},"end":{"line":60,"column":9}}],"line":58},"11":{"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":105}},"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":42}},{"start":{"line":58,"column":46},"end":{"line":58,"column":65}},{"start":{"line":58,"column":69},"end":{"line":58,"column":105}}],"line":58},"12":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"13":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"14":{"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":59}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":39}},{"start":{"line":68,"column":43},"end":{"line":68,"column":59}}],"line":68},"15":{"loc":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},{"start":{"line":72,"column":8},"end":{"line":74,"column":9}}],"line":72},"16":{"loc":{"start":{"line":72,"column":12},"end":{"line":72,"column":81}},"type":"binary-expr","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":46}},{"start":{"line":72,"column":50},"end":{"line":72,"column":81}}],"line":72},"17":{"loc":{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":12},"end":{"line":79,"column":13}},{"start":{"line":77,"column":12},"end":{"line":79,"column":13}}],"line":77},"18":{"loc":{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":89,"column":9}},{"start":{"line":84,"column":8},"end":{"line":89,"column":9}}],"line":84},"19":{"loc":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},{"start":{"line":85,"column":12},"end":{"line":87,"column":13}}],"line":85}},"s":{"0":1,"1":1,"2":1,"3":7,"4":0,"5":7,"6":6,"7":6,"8":12,"9":1,"10":11,"11":0,"12":11,"13":11,"14":11,"15":2,"16":6,"17":2,"18":1,"19":0,"20":2,"21":0,"22":2,"23":4,"24":6,"25":0,"26":6,"27":6,"28":0,"29":6,"30":2,"31":0,"32":2,"33":2,"34":0,"35":2,"36":6,"37":0,"38":6,"39":6,"40":0,"41":6,"42":6,"43":13,"44":0,"45":6,"46":6,"47":0,"48":0,"49":0,"50":6,"51":1},"f":{"0":7,"1":12,"2":2,"3":4,"4":6,"5":2,"6":6,"7":13},"b":{"0":[0,7],"1":[7,7],"2":[1,11],"3":[12,11],"4":[0,11],"5":[1,2,2,4,6,2,1,0],"6":[0,2],"7":[0,6],"8":[6,6,6],"9":[0,6],"10":[0,2],"11":[2,2,2],"12":[0,2],"13":[0,6],"14":[6,6],"15":[0,6],"16":[6,6],"17":[0,13],"18":[0,6],"19":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Parser.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Parser.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\nimport {Query, Filter, LogicComparison, MComparison, SComparison, Options} from \"../dataModels/Query\";\nexport class Parser {\n\tpublic parseQuery(query: unknown): Query {\n\t\t// Initial validation of the query object\n\t\tif (typeof query !== \"object\" || query === null) {\n\t\t\tthrow new InsightError(\"Query must be an object\");\n\t\t}\n\t\t// Parse the WHERE and OPTIONS parts of the query\n\t\tconst whereClause = this.parseWhereClause((query as any)[\"WHERE\"]);\n\t\tconst optionsClause = this.parseOptionsClause((query as any)[\"OPTIONS\"]);\n\t\t// Construct and return the parsed query object\n\t\treturn {WHERE: whereClause, OPTIONS: optionsClause};\n\t}\n\n\tprivate parseWhereClause(where: unknown): Filter {\n\t\tif (typeof where !== \"object\" || where === null) {\n\t\t\tthrow new Error(\"WHERE clause must be an object\");\n\t\t}\n\n\t\t// An empty WHERE object matches all entries\n\t\tif (Object.keys(where).length === 0) {\n\t\t\treturn {}; // Represents no filter\n\t\t}\n\n\t\tconst filterType = Object.keys(where)[0];\n\t\tconst filterValue = (where as any)[filterType];\n\t\tswitch (filterType) {\n\t\t\tcase \"AND\":\n\t\t\tcase \"OR\":\n\t\t\t\treturn this.parseLogicalComparison(filterType, filterValue);\n\t\t\tcase \"LT\":\n\t\t\tcase \"GT\":\n\t\t\tcase \"EQ\":\n\t\t\t\treturn this.parseMComparison(filterType, filterValue);\n\t\t\tcase \"IS\":\n\t\t\t\treturn this.parseSComparison(filterValue);\n\t\t\tcase \"NOT\":\n\t\t\t\treturn {NOT: this.parseWhereClause(filterValue)};\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid filter type: ${filterType}`);\n\t\t}\n\t}\n\n\tprivate parseLogicalComparison(operator: string, filters: unknown): LogicComparison {\n\t\tif (!Array.isArray(filters)) {\n\t\t\tthrow new Error(`${operator} value must be an array`);\n\t\t}\n\t\treturn {\n\t\t\t[operator]: filters.map((filter) => this.parseWhereClause(filter)),\n\t\t};\n\t}\n\n\tprivate parseMComparison(operator: string, comparison: unknown): MComparison {\n\t\tif (typeof comparison !== \"object\" || comparison === null || Object.keys(comparison).length !== 1) {\n\t\t\tthrow new Error(`${operator} comparison requires a single field with a numeric value`);\n\t\t}\n\t\tconst [field, value] = Object.entries(comparison)[0];\n\t\tif (typeof value !== \"number\") {\n\t\t\tthrow new Error(`Value for ${field} in ${operator} comparison must be a number`);\n\t\t}\n\t\treturn {[operator]: {[field]: value}};\n\t}\n\n\tprivate parseSComparison(comparison: unknown): SComparison {\n\t\tif (typeof comparison !== \"object\" || comparison === null || Object.keys(comparison).length !== 1) {\n\t\t\tthrow new Error(\"IS comparison requires a single field with a string value\");\n\t\t}\n\t\tconst [field, value] = Object.entries(comparison)[0];\n\t\tif (typeof value !== \"string\") {\n\t\t\tthrow new Error(`Value for ${field} in IS comparison must be a string`);\n\t\t}\n\t\treturn {IS: {[field]: value}};\n\t}\n\n\tprivate parseOptionsClause(options: unknown): Options {\n\t\tif (typeof options !== \"object\" || options === null) {\n\t\t\tthrow new Error(\"OPTIONS must be an object\");\n\t\t}\n\n\t\tconst optionsObj = options as Partial<{COLUMNS: unknown; ORDER: unknown}>;\n\t\tif (!Array.isArray(optionsObj.COLUMNS) || optionsObj.COLUMNS.length === 0) {\n\t\t\tthrow new Error(\"COLUMNS must be a non-empty array\");\n\t\t}\n\n\t\t// Validate that each item in COLUMNS is a string\n\t\tconst columns = optionsObj.COLUMNS;\n\t\tcolumns.forEach((column) => {\n\t\t\tif (typeof column !== \"string\") {\n\t\t\t\tthrow new Error(\"Each item in COLUMNS must be a string\");\n\t\t\t}\n\t\t});\n\n\t\tconst parsedOptions: Options = {\n\t\t\tCOLUMNS: columns,\n\t\t};\n\n\t\t// If ORDER is specified, validate it\n\t\tif (optionsObj.ORDER !== undefined) {\n\t\t\tif (typeof optionsObj.ORDER !== \"string\") {\n\t\t\t\tthrow new Error(\"ORDER must be a string\");\n\t\t\t}\n\t\t\tparsedOptions.ORDER = optionsObj.ORDER;\n\t\t}\n\n\t\treturn parsedOptions;\n\t}\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fec8a3f7afb6c2559d7c1a0e1a887d68b51cf88a","contentHash":"b038bce64f1f7b874df9a68b50eecb751de680f59002bf7bb3a4f9e539abaeb7"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Validator.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Validator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":64}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":46}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":50}},"5":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":19}},"7":{"start":{"line":14,"column":8},"end":{"line":28,"column":9}},"8":{"start":{"line":15,"column":12},"end":{"line":15,"column":49}},"9":{"start":{"line":17,"column":13},"end":{"line":28,"column":9}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":45}},"11":{"start":{"line":20,"column":13},"end":{"line":28,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":45}},"13":{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":49}},"15":{"start":{"line":27,"column":12},"end":{"line":27,"column":91}},"16":{"start":{"line":31,"column":24},"end":{"line":31,"column":65}},"17":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":92}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":70}},"20":{"start":{"line":35,"column":36},"end":{"line":35,"column":68}},"21":{"start":{"line":38,"column":27},"end":{"line":38,"column":77}},"22":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":104}},"24":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"25":{"start":{"line":43,"column":12},"end":{"line":43,"column":98}},"26":{"start":{"line":47,"column":27},"end":{"line":47,"column":41}},"27":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"28":{"start":{"line":49,"column":12},"end":{"line":49,"column":104}},"29":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"30":{"start":{"line":52,"column":12},"end":{"line":52,"column":98}},"31":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"32":{"start":{"line":57,"column":12},"end":{"line":57,"column":89}},"33":{"start":{"line":59,"column":8},"end":{"line":63,"column":11}},"34":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"35":{"start":{"line":61,"column":16},"end":{"line":61,"column":97}},"36":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":78}},"38":{"start":{"line":69,"column":0},"end":{"line":69,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":25},"end":{"line":9,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":32},"end":{"line":29,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":45},"end":{"line":36,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":24},"end":{"line":35,"column":25}},"loc":{"start":{"line":35,"column":36},"end":{"line":35,"column":68}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":37},"end":{"line":45,"column":5}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":37},"end":{"line":54,"column":5}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":35},"end":{"line":67,"column":5}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":32},"end":{"line":59,"column":33}},"loc":{"start":{"line":59,"column":44},"end":{"line":63,"column":9}},"line":59}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":28,"column":9}},{"start":{"line":14,"column":8},"end":{"line":28,"column":9}}],"line":14},"2":{"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":45}},"type":"binary-expr","locations":[{"start":{"line":14,"column":12},"end":{"line":14,"column":27}},{"start":{"line":14,"column":31},"end":{"line":14,"column":45}}],"line":14},"3":{"loc":{"start":{"line":17,"column":13},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":13},"end":{"line":28,"column":9}},{"start":{"line":17,"column":13},"end":{"line":28,"column":9}}],"line":17},"4":{"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":67}},"type":"binary-expr","locations":[{"start":{"line":17,"column":17},"end":{"line":17,"column":31}},{"start":{"line":17,"column":35},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}],"line":17},"5":{"loc":{"start":{"line":20,"column":13},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":13},"end":{"line":28,"column":9}},{"start":{"line":20,"column":13},"end":{"line":28,"column":9}}],"line":20},"6":{"loc":{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":13},"end":{"line":28,"column":9}},{"start":{"line":23,"column":13},"end":{"line":28,"column":9}}],"line":23},"7":{"loc":{"start":{"line":31,"column":24},"end":{"line":31,"column":65}},"type":"binary-expr","locations":[{"start":{"line":31,"column":24},"end":{"line":31,"column":43}},{"start":{"line":31,"column":47},"end":{"line":31,"column":65}}],"line":31},"8":{"loc":{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":8},"end":{"line":34,"column":9}}],"line":32},"9":{"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":59}},"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":35}},{"start":{"line":32,"column":39},"end":{"line":32,"column":59}}],"line":32},"10":{"loc":{"start":{"line":38,"column":27},"end":{"line":38,"column":77}},"type":"binary-expr","locations":[{"start":{"line":38,"column":27},"end":{"line":38,"column":41}},{"start":{"line":38,"column":45},"end":{"line":38,"column":59}},{"start":{"line":38,"column":63},"end":{"line":38,"column":77}}],"line":38},"11":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"12":{"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":82}},"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":42}},{"start":{"line":39,"column":46},"end":{"line":39,"column":82}}],"line":39},"13":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"14":{"loc":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},{"start":{"line":48,"column":8},"end":{"line":50,"column":9}}],"line":48},"15":{"loc":{"start":{"line":48,"column":12},"end":{"line":48,"column":82}},"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":42}},{"start":{"line":48,"column":46},"end":{"line":48,"column":82}}],"line":48},"16":{"loc":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},{"start":{"line":51,"column":8},"end":{"line":53,"column":9}}],"line":51},"17":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"18":{"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":60}},"type":"binary-expr","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":28}},{"start":{"line":56,"column":32},"end":{"line":56,"column":60}}],"line":56},"19":{"loc":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},{"start":{"line":60,"column":12},"end":{"line":62,"column":13}}],"line":60},"20":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"21":{"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":62}},"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":25}},{"start":{"line":64,"column":29},"end":{"line":64,"column":62}}],"line":64}},"s":{"0":1,"1":1,"2":1,"3":6,"4":6,"5":11,"6":0,"7":11,"8":2,"9":9,"10":6,"11":3,"12":2,"13":1,"14":1,"15":0,"16":2,"17":2,"18":0,"19":2,"20":4,"21":6,"22":6,"23":0,"24":6,"25":0,"26":2,"27":2,"28":0,"29":2,"30":0,"31":6,"32":0,"33":6,"34":13,"35":0,"36":6,"37":0,"38":1},"f":{"0":6,"1":11,"2":2,"3":4,"4":6,"5":2,"6":6,"7":13},"b":{"0":[0,11],"1":[2,9],"2":[11,10],"3":[6,3],"4":[9,7,5],"5":[2,1],"6":[1,0],"7":[2,1],"8":[0,2],"9":[2,2],"10":[6,4,2],"11":[0,6],"12":[6,6],"13":[0,6],"14":[0,2],"15":[2,2],"16":[0,2],"17":[0,6],"18":[6,6],"19":[0,13],"20":[0,6],"21":[6,0]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Validator.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Validator.ts"],"names":[],"mappings":";;;AAAA,iEAA0D;AAG1D,MAAa,SAAS;IACd,aAAa,CAAC,KAAY;QAChC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAEO,mBAAmB,CAAC,MAAc;QACzC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAErC,OAAO;SACP;QAGD,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,EAAE;YACtC,IAAI,CAAC,uBAAuB,CAAC,MAAyB,CAAC,CAAC;SACxD;aAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,EAAE;YAC9D,IAAI,CAAC,mBAAmB,CAAC,MAAqB,CAAC,CAAC;SAChD;aAAM,IAAI,IAAI,IAAI,MAAM,EAAE;YAC1B,IAAI,CAAC,mBAAmB,CAAC,MAAqB,CAAC,CAAC;SAChD;aAAM,IAAI,KAAK,IAAI,MAAM,EAAE;YAC3B,IAAI,CAAC,mBAAmB,CAAE,MAAc,CAAC,GAAG,CAAC,CAAC;SAC9C;aAAM;YACN,MAAM,IAAI,6BAAY,CAAC,qCAAqC,CAAC,CAAC;SAC9D;IACF,CAAC;IAEO,uBAAuB,CAAC,eAAgC;QAC/D,MAAM,OAAO,GAAG,eAAe,CAAC,GAAG,IAAI,eAAe,CAAC,EAAE,CAAC;QAC1D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACpD,MAAM,IAAI,6BAAY,CAAC,sCAAsC,CAAC,CAAC;SAC/D;QACD,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC;IAEO,mBAAmB,CAAC,WAAwB;QACnD,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;QACtE,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3E,MAAM,IAAI,6BAAY,CAAC,kDAAkD,CAAC,CAAC;SAC3E;QACD,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACrD,MAAM,IAAI,6BAAY,CAAC,4CAA4C,CAAC,CAAC;SACrE;IACF,CAAC;IAEO,mBAAmB,CAAC,WAAwB;QACnD,MAAM,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC;QAClC,IAAI,OAAO,UAAU,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3E,MAAM,IAAI,6BAAY,CAAC,kDAAkD,CAAC,CAAC;SAC3E;QACD,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACrD,MAAM,IAAI,6BAAY,CAAC,4CAA4C,CAAC,CAAC;SACrE;IACF,CAAC;IAEO,qBAAqB,CAAC,OAAgB;QAC7C,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACrD,MAAM,IAAI,6BAAY,CAAC,mCAAmC,CAAC,CAAC;SAC5D;QACD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YAClC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBAC/B,MAAM,IAAI,6BAAY,CAAC,uCAAuC,CAAC,CAAC;aAChE;QACF,CAAC,CAAC,CAAC;QACH,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACvD,MAAM,IAAI,6BAAY,CAAC,wBAAwB,CAAC,CAAC;SACjD;IACF,CAAC;CACD;AAnED,8BAmEC","sourcesContent":["import {InsightError} from \"../controller/IInsightFacade\";\nimport {Query, Filter, LogicComparison, MComparison, SComparison, Options} from \"../dataModels/Query\";\n\nexport class Validator {\n\tpublic validateQuery(query: Query): void {\n\t\tthis.validateWhereClause(query.WHERE);\n\t\tthis.validateOptionsClause(query.OPTIONS);\n\t}\n\n\tprivate validateWhereClause(filter: Filter): void {\n\t\tif (Object.keys(filter).length === 0) {\n\t\t\t// An empty WHERE object is valid, matches all entries\n\t\t\treturn;\n\t\t}\n\n\t\t// Depending on the filter type, validate accordingly\n\t\tif (\"AND\" in filter || \"OR\" in filter) {\n\t\t\tthis.validateLogicComparison(filter as LogicComparison);\n\t\t} else if (\"LT\" in filter || \"GT\" in filter || \"EQ\" in filter) {\n\t\t\tthis.validateMComparison(filter as MComparison);\n\t\t} else if (\"IS\" in filter) {\n\t\t\tthis.validateSComparison(filter as SComparison);\n\t\t} else if (\"NOT\" in filter) {\n\t\t\tthis.validateWhereClause((filter as any).NOT);\n\t\t} else {\n\t\t\tthrow new InsightError(\"Invalid filter type in WHERE clause\");\n\t\t}\n\t}\n\n\tprivate validateLogicComparison(logicComparison: LogicComparison): void {\n\t\tconst filters = logicComparison.AND || logicComparison.OR;\n\t\tif (!Array.isArray(filters) || filters.length === 0) {\n\t\t\tthrow new InsightError(\"AND/OR must have at least one filter\");\n\t\t}\n\t\tfilters.forEach((filter) => this.validateWhereClause(filter));\n\t}\n\n\tprivate validateMComparison(mComparison: MComparison): void {\n\t\tconst comparator = mComparison.LT || mComparison.GT || mComparison.EQ;\n\t\tif (typeof comparator !== \"object\" || Object.keys(comparator).length !== 1) {\n\t\t\tthrow new InsightError(\"MComparison must have exactly one key-value pair\");\n\t\t}\n\t\tif (typeof Object.values(comparator)[0] !== \"number\") {\n\t\t\tthrow new InsightError(\"The value for MComparison must be a number\");\n\t\t}\n\t}\n\n\tprivate validateSComparison(sComparison: SComparison): void {\n\t\tconst comparator = sComparison.IS;\n\t\tif (typeof comparator !== \"object\" || Object.keys(comparator).length !== 1) {\n\t\t\tthrow new InsightError(\"SComparison must have exactly one key-value pair\");\n\t\t}\n\t\tif (typeof Object.values(comparator)[0] !== \"string\") {\n\t\t\tthrow new InsightError(\"The value for SComparison must be a string\");\n\t\t}\n\t}\n\n\tprivate validateOptionsClause(options: Options): void {\n\t\tif (!options.COLUMNS || options.COLUMNS.length === 0) {\n\t\t\tthrow new InsightError(\"COLUMNS must be a non-empty array\");\n\t\t}\n\t\toptions.COLUMNS.forEach((column) => {\n\t\t\tif (typeof column !== \"string\") {\n\t\t\t\tthrow new InsightError(\"Each item in COLUMNS must be a string\");\n\t\t\t}\n\t\t});\n\t\tif (options.ORDER && typeof options.ORDER !== \"string\") {\n\t\t\tthrow new InsightError(\"ORDER must be a string\");\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"41296013f9a7d571a709162fa2a85913dd96df72","contentHash":"06efcba60014ca71d29ad659bc9ab979dcc2120280094dbb73748e68317a6053"},"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Executor.ts":{"path":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Executor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":25},"end":{"line":6,"column":34}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":59}},"4":{"start":{"line":8,"column":8},"end":{"line":13,"column":11}},"5":{"start":{"line":9,"column":30},"end":{"line":9,"column":59}},"6":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":42}},"8":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":66}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":48}},"11":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":19}},"13":{"start":{"line":23,"column":8},"end":{"line":37,"column":11}},"14":{"start":{"line":24,"column":12},"end":{"line":36,"column":13}},"15":{"start":{"line":25,"column":16},"end":{"line":25,"column":95}},"16":{"start":{"line":25,"column":45},"end":{"line":25,"column":93}},"17":{"start":{"line":27,"column":17},"end":{"line":36,"column":13}},"18":{"start":{"line":28,"column":16},"end":{"line":28,"column":61}},"19":{"start":{"line":31,"column":33},"end":{"line":31,"column":54}},"20":{"start":{"line":32,"column":34},"end":{"line":32,"column":65}},"21":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"22":{"start":{"line":34,"column":20},"end":{"line":34,"column":46}},"23":{"start":{"line":40,"column":32},"end":{"line":40,"column":48}},"24":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"25":{"start":{"line":42,"column":12},"end":{"line":42,"column":53}},"26":{"start":{"line":44,"column":8},"end":{"line":44,"column":20}},"27":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":29}},"29":{"start":{"line":49,"column":12},"end":{"line":49,"column":39}},"30":{"start":{"line":51,"column":8},"end":{"line":53,"column":11}},"31":{"start":{"line":52,"column":12},"end":{"line":52,"column":56}},"32":{"start":{"line":56,"column":8},"end":{"line":56,"column":49}},"33":{"start":{"line":59,"column":8},"end":{"line":59,"column":66}},"34":{"start":{"line":62,"column":8},"end":{"line":62,"column":30}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":31}},"36":{"start":{"line":68,"column":8},"end":{"line":106,"column":9}},"37":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"38":{"start":{"line":70,"column":16},"end":{"line":70,"column":96}},"39":{"start":{"line":70,"column":55},"end":{"line":70,"column":94}},"40":{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},"41":{"start":{"line":73,"column":16},"end":{"line":73,"column":94}},"42":{"start":{"line":73,"column":53},"end":{"line":73,"column":92}},"43":{"start":{"line":76,"column":16},"end":{"line":76,"column":29}},"44":{"start":{"line":79,"column":13},"end":{"line":106,"column":9}},"45":{"start":{"line":80,"column":12},"end":{"line":80,"column":61}},"46":{"start":{"line":82,"column":13},"end":{"line":106,"column":9}},"47":{"start":{"line":83,"column":24},"end":{"line":83,"column":49}},"48":{"start":{"line":84,"column":29},"end":{"line":84,"column":43}},"49":{"start":{"line":85,"column":26},"end":{"line":85,"column":40}},"50":{"start":{"line":86,"column":12},"end":{"line":86,"column":54}},"51":{"start":{"line":88,"column":13},"end":{"line":106,"column":9}},"52":{"start":{"line":89,"column":34},"end":{"line":89,"column":56}},"53":{"start":{"line":90,"column":24},"end":{"line":90,"column":61}},"54":{"start":{"line":91,"column":32},"end":{"line":91,"column":58}},"55":{"start":{"line":92,"column":29},"end":{"line":92,"column":43}},"56":{"start":{"line":93,"column":33},"end":{"line":93,"column":57}},"57":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"58":{"start":{"line":95,"column":16},"end":{"line":95,"column":75}},"59":{"start":{"line":97,"column":12},"end":{"line":102,"column":13}},"60":{"start":{"line":98,"column":27},"end":{"line":98,"column":61}},"61":{"start":{"line":99,"column":27},"end":{"line":99,"column":61}},"62":{"start":{"line":100,"column":27},"end":{"line":100,"column":63}},"63":{"start":{"line":101,"column":25},"end":{"line":101,"column":81}},"64":{"start":{"line":105,"column":12},"end":{"line":105,"column":51}},"65":{"start":{"line":109,"column":24},"end":{"line":116,"column":10}},"66":{"start":{"line":110,"column":27},"end":{"line":110,"column":29}},"67":{"start":{"line":111,"column":12},"end":{"line":114,"column":15}},"68":{"start":{"line":112,"column":33},"end":{"line":112,"column":50}},"69":{"start":{"line":113,"column":16},"end":{"line":113,"column":58}},"70":{"start":{"line":115,"column":12},"end":{"line":115,"column":26}},"71":{"start":{"line":117,"column":8},"end":{"line":117,"column":23}},"72":{"start":{"line":120,"column":0},"end":{"line":120,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":28},"end":{"line":18,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":38},"end":{"line":8,"column":39}},"loc":{"start":{"line":8,"column":50},"end":{"line":13,"column":9}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":45},"end":{"line":38,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":39},"end":{"line":23,"column":40}},"loc":{"start":{"line":23,"column":57},"end":{"line":37,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":30},"end":{"line":25,"column":31}},"loc":{"start":{"line":25,"column":45},"end":{"line":25,"column":93}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":39,"column":4},"end":{"line":39,"column":5}},"loc":{"start":{"line":39,"column":26},"end":{"line":45,"column":5}},"line":39},"6":{"name":"(anonymous_6)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":37},"end":{"line":54,"column":5}},"line":46},"7":{"name":"(anonymous_7)","decl":{"start":{"line":51,"column":42},"end":{"line":51,"column":43}},"loc":{"start":{"line":51,"column":55},"end":{"line":53,"column":9}},"line":51},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":30},"end":{"line":57,"column":5}},"line":55},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":26},"end":{"line":60,"column":5}},"line":58},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":26},"end":{"line":63,"column":5}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":23},"end":{"line":66,"column":5}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":36},"end":{"line":107,"column":5}},"line":67},"13":{"name":"(anonymous_13)","decl":{"start":{"line":70,"column":40},"end":{"line":70,"column":41}},"loc":{"start":{"line":70,"column":55},"end":{"line":70,"column":94}},"line":70},"14":{"name":"(anonymous_14)","decl":{"start":{"line":73,"column":38},"end":{"line":73,"column":39}},"loc":{"start":{"line":73,"column":53},"end":{"line":73,"column":92}},"line":73},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":37},"end":{"line":118,"column":5}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":109,"column":37},"end":{"line":109,"column":38}},"loc":{"start":{"line":109,"column":50},"end":{"line":116,"column":9}},"line":109},"17":{"name":"(anonymous_17)","decl":{"start":{"line":111,"column":36},"end":{"line":111,"column":37}},"loc":{"start":{"line":111,"column":48},"end":{"line":114,"column":13}},"line":111}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},{"start":{"line":10,"column":12},"end":{"line":12,"column":13}}],"line":10},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"3":{"loc":{"start":{"line":24,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":36,"column":13}},{"start":{"line":24,"column":12},"end":{"line":36,"column":13}}],"line":24},"4":{"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}},"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":29}},{"start":{"line":24,"column":33},"end":{"line":24,"column":45}}],"line":24},"5":{"loc":{"start":{"line":27,"column":17},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":17},"end":{"line":36,"column":13}},{"start":{"line":27,"column":17},"end":{"line":36,"column":13}}],"line":27},"6":{"loc":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},{"start":{"line":33,"column":16},"end":{"line":35,"column":17}}],"line":33},"7":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"8":{"loc":{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":50,"column":9}},{"start":{"line":47,"column":8},"end":{"line":50,"column":9}}],"line":47},"9":{"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":48}},"type":"binary-expr","locations":[{"start":{"line":56,"column":15},"end":{"line":56,"column":30}},{"start":{"line":56,"column":34},"end":{"line":56,"column":48}}],"line":56},"10":{"loc":{"start":{"line":59,"column":15},"end":{"line":59,"column":65}},"type":"binary-expr","locations":[{"start":{"line":59,"column":15},"end":{"line":59,"column":29}},{"start":{"line":59,"column":33},"end":{"line":59,"column":47}},{"start":{"line":59,"column":51},"end":{"line":59,"column":65}}],"line":59},"11":{"loc":{"start":{"line":68,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":106,"column":9}},{"start":{"line":68,"column":8},"end":{"line":106,"column":9}}],"line":68},"12":{"loc":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},{"start":{"line":69,"column":12},"end":{"line":77,"column":13}}],"line":69},"13":{"loc":{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":17},"end":{"line":77,"column":13}},{"start":{"line":72,"column":17},"end":{"line":77,"column":13}}],"line":72},"14":{"loc":{"start":{"line":79,"column":13},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":13},"end":{"line":106,"column":9}},{"start":{"line":79,"column":13},"end":{"line":106,"column":9}}],"line":79},"15":{"loc":{"start":{"line":82,"column":13},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":13},"end":{"line":106,"column":9}},{"start":{"line":82,"column":13},"end":{"line":106,"column":9}}],"line":82},"16":{"loc":{"start":{"line":88,"column":13},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":13},"end":{"line":106,"column":9}},{"start":{"line":88,"column":13},"end":{"line":106,"column":9}}],"line":88},"17":{"loc":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},{"start":{"line":94,"column":12},"end":{"line":96,"column":13}}],"line":94},"18":{"loc":{"start":{"line":97,"column":12},"end":{"line":102,"column":13}},"type":"switch","locations":[{"start":{"line":98,"column":16},"end":{"line":98,"column":61}},{"start":{"line":99,"column":16},"end":{"line":99,"column":61}},{"start":{"line":100,"column":16},"end":{"line":100,"column":63}},{"start":{"line":101,"column":16},"end":{"line":101,"column":81}}],"line":97}},"s":{"0":1,"1":1,"2":6,"3":6,"4":6,"5":13,"6":13,"7":13,"8":6,"9":0,"10":6,"11":11,"12":0,"13":11,"14":11,"15":2,"16":4,"17":9,"18":1,"19":8,"20":8,"21":8,"22":8,"23":21,"24":21,"25":21,"26":0,"27":6,"28":0,"29":0,"30":6,"31":387672,"32":649232,"33":387657,"34":455396,"35":520008,"36":649232,"37":129224,"38":64612,"39":67739,"40":64612,"41":64612,"42":129209,"43":0,"44":520008,"45":64612,"46":455396,"47":67739,"48":67739,"49":67739,"50":67739,"51":387657,"52":387657,"53":387657,"54":387657,"55":387657,"56":387657,"57":387657,"58":0,"59":387657,"60":129224,"61":129224,"62":129209,"63":0,"64":0,"65":6,"66":380,"67":380,"68":816,"69":816,"70":380,"71":6,"72":1},"f":{"0":6,"1":13,"2":11,"3":11,"4":4,"5":21,"6":6,"7":387672,"8":649232,"9":387657,"10":455396,"11":520008,"12":649232,"13":67739,"14":129209,"15":6,"16":380,"17":816},"b":{"0":[13,0],"1":[0,6],"2":[0,11],"3":[2,9],"4":[11,10],"5":[1,8],"6":[8,0],"7":[21,0],"8":[0,6],"9":[649232,584620],"10":[387657,258433,129209],"11":[129224,520008],"12":[64612,64612],"13":[64612,0],"14":[64612,455396],"15":[67739,387657],"16":[387657,0],"17":[0,387657],"18":[129224,129224,129209,0]},"inputSourceMap":{"version":3,"file":"/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Executor.ts","sources":["/Users/devinproothi/Desktop/University/UBCV/Year 3/CPSC 310/Project/project_team117/src/query/Executor.ts"],"names":[],"mappings":"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","sourcesContent":["import {Query, Filter, LogicComparison, MComparison, SComparison, Options, Negation} from \"../dataModels/Query\";\nimport CourseData from \"../dataModels/CourseData\";\nimport Section from \"../dataModels/Section\";\n\nexport class Executor {\n\tpublic extractDatasetId(query: Query): string {\n\t\t// Initialize an empty set to collect unique dataset IDs\n\t\tlet datasetIds = new Set<string>();\n\n\t\t// Extract dataset IDs from the WHERE clause\n\t\tthis.extractIdsFromFilter(query.WHERE, datasetIds);\n\n\t\t// Extract dataset IDs from the OPTIONS clause\n\t\tquery.OPTIONS.COLUMNS.forEach((column) => {\n\t\t\tconst datasetId = this.extractIdFromKey(column);\n\t\t\tif (datasetId) {\n\t\t\t\tdatasetIds.add(datasetId);\n\t\t\t}\n\t\t});\n\n\t\t// Assuming consistency, there should only be one dataset ID\n\t\tif (datasetIds.size !== 1) {\n\t\t\tthrow new Error(\"Query must use a single dataset ID\");\n\t\t}\n\n\t\treturn datasetIds.values().next().value;\n\t}\n\n\tprivate extractIdsFromFilter(filter: Filter, datasetIds: Set<string>): void {\n\t\tif (Object.keys(filter).length === 0) {\n\t\t\t// Base case: empty filter\n\t\t\treturn;\n\t\t}\n\n\t\tObject.entries(filter).forEach(([key, value]) => {\n\t\t\tif (key === \"AND\" || key === \"OR\") {\n\t\t\t\t(value as Filter[]).forEach((subFilter) => this.extractIdsFromFilter(subFilter, datasetIds));\n\t\t\t} else if (key === \"NOT\") {\n\t\t\t\tthis.extractIdsFromFilter(value as Filter, datasetIds);\n\t\t\t} else {\n\t\t\t\t// MComparison, SComparison\n\t\t\t\tconst fieldKey = Object.keys(value)[0];\n\t\t\t\tconst datasetId = this.extractIdFromKey(fieldKey);\n\t\t\t\tif (datasetId) {\n\t\t\t\t\tdatasetIds.add(datasetId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate extractIdFromKey(key: string): string | null {\n\t\tconst underscoreIndex = key.indexOf(\"_\");\n\t\tif (underscoreIndex !== -1) {\n\t\t\treturn key.substring(0, underscoreIndex);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic applyFilters(courseData: CourseData, filter: Filter): Section[] {\n\t\tif (Object.keys(filter).length === 0) {\n\t\t\tconsole.log(\"0\");\n\t\t\t// If the filter is empty, return all sections\n\t\t\treturn courseData.sections;\n\t\t}\n\n\t\treturn courseData.sections.filter((section) => {\n\t\t\treturn this.evaluateFilter(section, filter);\n\t\t});\n\t}\n\n\tprivate isLogicComparison(filter: Filter): filter is LogicComparison {\n\t\treturn \"AND\" in filter || \"OR\" in filter;\n\t}\n\n\tprivate isMComparison(filter: Filter): filter is MComparison {\n\t\treturn \"LT\" in filter || \"GT\" in filter || \"EQ\" in filter;\n\t}\n\n\tprivate isSComparison(filter: Filter): filter is SComparison {\n\t\treturn \"IS\" in filter;\n\t}\n\n\tprivate isNegation(filter: Filter): filter is Negation {\n\t\treturn \"NOT\" in filter;\n\t}\n\n\tprivate evaluateFilter(section: Section, filter: Filter): boolean {\n\t\t// console.log(filter);\n\t\t// const temp = Object.keys((filter as any)[Object.keys(filter)[0]])[0];\n\t\t// const temp2 = temp.split(\"_\");\n\t\t// console.log(section.get(temp2[1]));\n\t\tif (this.isLogicComparison(filter)) {\n\t\t\tif (filter.AND) {\n\t\t\t\treturn filter.AND.every((subFilter) => this.evaluateFilter(section, subFilter));\n\t\t\t} else if (filter.OR) {\n\t\t\t\treturn filter.OR.some((subFilter) => this.evaluateFilter(section, subFilter));\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (this.isNegation(filter)) {\n\t\t\treturn !this.evaluateFilter(section, filter.NOT);\n\t\t} else if (this.isSComparison(filter)) {\n\t\t\tconst key = Object.keys(filter.IS)[0];\n\t\t\tconst keyParts = key.split(\"_\");\n\t\t\tconst value = filter.IS[key];\n\t\t\t// Assuming wildcards are not to be implemented in this example\n\t\t\treturn section.get(keyParts[1]) === value;\n\t\t} else if (this.isMComparison(filter)) {\n\t\t\tconst comparatorKey = Object.keys(filter)[0];\n\t\t\tconst key = Object.keys((filter as any)[comparatorKey])[0];\n\t\t\tconst targetValue = (filter as any)[comparatorKey][key];\n\t\t\tconst keyParts = key.split(\"_\");\n\t\t\tconst sectionValue = section.get(keyParts[1]);\n\n\t\t\tif (sectionValue === undefined) {\n\t\t\t\tthrow new Error(\"Attempted to compare an undefined value\");\n\t\t\t}\n\n\t\t\tswitch (comparatorKey) {\n\t\t\t\tcase \"LT\": return sectionValue < targetValue;\n\t\t\t\tcase \"GT\": return sectionValue > targetValue;\n\t\t\t\tcase \"EQ\": return sectionValue === targetValue;\n\t\t\t\tdefault: throw new Error(`Unknown comparison: ${comparatorKey}`);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Unknown filter type\");\n\t\t}\n\t}\n\n\tpublic formatResults(sections: Section[], options: Options): any[] {\n\t\t// Step 1: Select the specified columns\n\t\tconst results = sections.map((section) => {\n\t\t\tconst result: any = {};\n\t\t\toptions.COLUMNS.forEach((column) => {\n\t\t\t\tconst colParts = column.split(\"_\");\n\t\t\t\tresult[column] = section.get(colParts[1]);\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\n\t\t// Step 2: Sort the results if an ORDER key is specified\n\t\t// if (options.ORDER) {\n\t\t// \tconst orderKey = options.ORDER;\n\t\t// \tconsole.log(orderKey);\n\t\t// \tresults.sort((a, b) => {\n\t\t// \t\tif (a[orderKey] < b[orderKey]) {\n\t\t// \t\t\treturn -1;\n\t\t// \t\t} else if (a[orderKey] > b[orderKey]) {\n\t\t// \t\t\treturn 1;\n\t\t// \t\t} else {\n\t\t// \t\t\treturn 0;\n\t\t// \t\t}\n\t\t// \t});\n\t\t// }\n\n\t\treturn results;\n\t}\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15fbb5cfc36a812b79802c1e2de383761b2227a9","contentHash":"82e7f68c9c021b9ac5fd00530145e3c54788016ed5e5f2094e59128c56206c06"}}